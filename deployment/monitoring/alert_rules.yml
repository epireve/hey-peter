# Prometheus Alert Rules for HeyPeter Academy LMS
# This file defines alerting rules for various system components

groups:
  # Application Health Alerts
  - name: application_health
    rules:
      - alert: ApplicationDown
        expr: up{job="heypeter-app"} == 0
        for: 2m
        labels:
          severity: critical
          component: application
        annotations:
          summary: "HeyPeter Academy application instance is down"
          description: "Application instance {{ $labels.instance }} has been down for more than 2 minutes"

      - alert: ApplicationHighErrorRate
        expr: rate(http_requests_total{job="heypeter-app",status=~"5.."}[5m]) > 0.1
        for: 5m
        labels:
          severity: warning
          component: application
        annotations:
          summary: "High error rate in HeyPeter Academy application"
          description: "Error rate is {{ $value | humanizePercentage }} on {{ $labels.instance }}"

      - alert: ApplicationResponseTimeHigh
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job="heypeter-app"}[5m])) > 2
        for: 5m
        labels:
          severity: warning
          component: application
        annotations:
          summary: "High response time in HeyPeter Academy application"
          description: "95th percentile response time is {{ $value }}s on {{ $labels.instance }}"

      - alert: ApplicationMemoryUsageHigh
        expr: (process_resident_memory_bytes{job="heypeter-app"} / 1024 / 1024 / 1024) > 2
        for: 10m
        labels:
          severity: warning
          component: application
        annotations:
          summary: "High memory usage in application"
          description: "Application instance {{ $labels.instance }} is using {{ $value | humanize }}GB of memory"

  # Database Alerts
  - name: database_health
    rules:
      - alert: DatabaseDown
        expr: up{job="postgres"} == 0
        for: 1m
        labels:
          severity: critical
          component: database
        annotations:
          summary: "PostgreSQL database is down"
          description: "PostgreSQL database has been down for more than 1 minute"

      - alert: DatabaseConnectionsHigh
        expr: pg_stat_database_numbackends / pg_settings_max_connections > 0.8
        for: 5m
        labels:
          severity: warning
          component: database
        annotations:
          summary: "High number of database connections"
          description: "Database connections are at {{ $value | humanizePercentage }} of maximum"

      - alert: DatabaseSlowQueries
        expr: rate(pg_stat_database_tup_fetched[5m]) / rate(pg_stat_database_tup_returned[5m]) < 0.1
        for: 10m
        labels:
          severity: warning
          component: database
        annotations:
          summary: "Database queries are slow"
          description: "Database query efficiency is {{ $value | humanizePercentage }}"

      - alert: DatabaseReplicationLag
        expr: pg_replication_lag_seconds > 30
        for: 5m
        labels:
          severity: warning
          component: database
        annotations:
          summary: "Database replication lag is high"
          description: "Replication lag is {{ $value }}s"

  # System Resource Alerts
  - name: system_resources
    rules:
      - alert: HighCPUUsage
        expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
        for: 10m
        labels:
          severity: warning
          component: system
        annotations:
          summary: "High CPU usage detected"
          description: "CPU usage is {{ $value | humanizePercentage }} on {{ $labels.instance }}"

      - alert: HighMemoryUsage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 85
        for: 10m
        labels:
          severity: warning
          component: system
        annotations:
          summary: "High memory usage detected"
          description: "Memory usage is {{ $value | humanizePercentage }} on {{ $labels.instance }}"

      - alert: DiskSpaceLow
        expr: (1 - (node_filesystem_avail_bytes / node_filesystem_size_bytes)) * 100 > 85
        for: 5m
        labels:
          severity: warning
          component: system
        annotations:
          summary: "Disk space is running low"
          description: "Disk usage is {{ $value | humanizePercentage }} on {{ $labels.instance }}"

      - alert: DiskSpaceCritical
        expr: (1 - (node_filesystem_avail_bytes / node_filesystem_size_bytes)) * 100 > 95
        for: 1m
        labels:
          severity: critical
          component: system
        annotations:
          summary: "Disk space is critically low"
          description: "Disk usage is {{ $value | humanizePercentage }} on {{ $labels.instance }}"

      - alert: HighDiskIOWait
        expr: irate(node_cpu_seconds_total{mode="iowait"}[5m]) * 100 > 20
        for: 10m
        labels:
          severity: warning
          component: system
        annotations:
          summary: "High disk I/O wait time"
          description: "I/O wait time is {{ $value | humanizePercentage }} on {{ $labels.instance }}"

  # Load Balancer Alerts
  - name: load_balancer
    rules:
      - alert: NginxDown
        expr: up{job="nginx"} == 0
        for: 1m
        labels:
          severity: critical
          component: load_balancer
        annotations:
          summary: "Nginx load balancer is down"
          description: "Nginx has been down for more than 1 minute"

      - alert: NginxHighErrorRate
        expr: rate(nginx_http_requests_total{status=~"5.."}[5m]) > 10
        for: 5m
        labels:
          severity: warning
          component: load_balancer
        annotations:
          summary: "High error rate in Nginx"
          description: "Nginx 5xx error rate is {{ $value }} requests/second"

      - alert: HAProxyDown
        expr: up{job="haproxy"} == 0
        for: 1m
        labels:
          severity: critical
          component: load_balancer
        annotations:
          summary: "HAProxy is down"
          description: "HAProxy has been down for more than 1 minute"

      - alert: HAProxyBackendDown
        expr: haproxy_server_up == 0
        for: 2m
        labels:
          severity: critical
          component: load_balancer
        annotations:
          summary: "HAProxy backend server is down"
          description: "Backend server {{ $labels.server }} in {{ $labels.backend }} is down"

  # SSL Certificate Alerts
  - name: ssl_certificates
    rules:
      - alert: SSLCertificateExpiringSoon
        expr: ssl_certificate_expiry_seconds < 30 * 24 * 3600
        for: 1h
        labels:
          severity: warning
          component: ssl
        annotations:
          summary: "SSL certificate expiring soon"
          description: "SSL certificate for {{ $labels.instance }} expires in {{ $value | humanizeDuration }}"

      - alert: SSLCertificateExpired
        expr: ssl_certificate_expiry_seconds < 0
        for: 1m
        labels:
          severity: critical
          component: ssl
        annotations:
          summary: "SSL certificate has expired"
          description: "SSL certificate for {{ $labels.instance }} has expired"

  # Redis Alerts
  - name: redis_health
    rules:
      - alert: RedisDown
        expr: up{job="redis"} == 0
        for: 2m
        labels:
          severity: critical
          component: redis
        annotations:
          summary: "Redis is down"
          description: "Redis has been down for more than 2 minutes"

      - alert: RedisHighMemoryUsage
        expr: redis_memory_used_bytes / redis_memory_max_bytes > 0.9
        for: 10m
        labels:
          severity: warning
          component: redis
        annotations:
          summary: "Redis memory usage is high"
          description: "Redis memory usage is {{ $value | humanizePercentage }}"

      - alert: RedisHighConnections
        expr: redis_connected_clients > 100
        for: 10m
        labels:
          severity: warning
          component: redis
        annotations:
          summary: "High number of Redis connections"
          description: "Redis has {{ $value }} connected clients"

  # External Service Alerts
  - name: external_services
    rules:
      - alert: WebsiteDown
        expr: probe_success{job="blackbox"} == 0
        for: 2m
        labels:
          severity: critical
          component: external
        annotations:
          summary: "Website is down"
          description: "{{ $labels.instance }} is not responding to HTTP probes"

      - alert: WebsiteSlowResponse
        expr: probe_duration_seconds{job="blackbox"} > 5
        for: 5m
        labels:
          severity: warning
          component: external
        annotations:
          summary: "Website response is slow"
          description: "{{ $labels.instance }} response time is {{ $value }}s"

      - alert: SSLCertificateInvalid
        expr: probe_ssl_certificate_expiry_seconds{job="blackbox"} < 0
        for: 1m
        labels:
          severity: critical
          component: external
        annotations:
          summary: "SSL certificate is invalid"
          description: "SSL certificate for {{ $labels.instance }} is invalid or expired"

  # Business Logic Alerts
  - name: business_metrics
    rules:
      - alert: HighUserRegistrationFailures
        expr: rate(user_registration_failures_total[10m]) > 0.1
        for: 10m
        labels:
          severity: warning
          component: business
        annotations:
          summary: "High user registration failure rate"
          description: "User registration failure rate is {{ $value }} failures/second"

      - alert: LowActiveUserSessions
        expr: active_user_sessions < 10
        for: 30m
        labels:
          severity: warning
          component: business
        annotations:
          summary: "Low number of active user sessions"
          description: "Only {{ $value }} active user sessions"

      - alert: DatabaseBackupFailed
        expr: time() - last_successful_backup_timestamp > 24 * 3600
        for: 1h
        labels:
          severity: critical
          component: backup
        annotations:
          summary: "Database backup is overdue"
          description: "Last successful backup was {{ $value | humanizeDuration }} ago"

      - alert: HighClassCancellationRate
        expr: rate(class_cancellations_total[1h]) / rate(class_bookings_total[1h]) > 0.2
        for: 30m
        labels:
          severity: warning
          component: business
        annotations:
          summary: "High class cancellation rate"
          description: "Class cancellation rate is {{ $value | humanizePercentage }}"

  # Docker Container Alerts
  - name: container_health
    rules:
      - alert: ContainerKilled
        expr: time() - container_last_seen > 60
        for: 1m
        labels:
          severity: warning
          component: container
        annotations:
          summary: "Container was killed"
          description: "Container {{ $labels.name }} was killed"

      - alert: ContainerHighCPU
        expr: rate(container_cpu_usage_seconds_total[5m]) * 100 > 80
        for: 10m
        labels:
          severity: warning
          component: container
        annotations:
          summary: "Container high CPU usage"
          description: "Container {{ $labels.name }} CPU usage is {{ $value | humanizePercentage }}"

      - alert: ContainerHighMemory
        expr: container_memory_usage_bytes / container_spec_memory_limit_bytes > 0.9
        for: 10m
        labels:
          severity: warning
          component: container
        annotations:
          summary: "Container high memory usage"
          description: "Container {{ $labels.name }} memory usage is {{ $value | humanizePercentage }}"

      - alert: ContainerVolumeUsage
        expr: container_fs_usage_bytes / container_fs_limit_bytes > 0.85
        for: 10m
        labels:
          severity: warning
          component: container
        annotations:
          summary: "Container volume usage high"
          description: "Container {{ $labels.name }} volume usage is {{ $value | humanizePercentage }}"