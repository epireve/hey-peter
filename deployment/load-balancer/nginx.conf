# Nginx Load Balancer Configuration for HeyPeter Academy LMS
# This configuration provides load balancing, SSL termination, and caching

# Global Configuration
user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Events Configuration
events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

# HTTP Configuration
http {
    # Basic Settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    charset utf-8;

    # Logging Format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    # Access Log
    access_log /var/log/nginx/access.log main;

    # Performance Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    # Client Settings
    client_max_body_size 100M;
    client_body_buffer_size 128k;
    client_header_buffer_size 3m;
    large_client_header_buffers 4 256k;
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=200r/m;

    # Connection Limiting
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;

    # Cache Zones
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:10m max_size=1g inactive=60m use_temp_path=off;
    proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=100m inactive=10m use_temp_path=off;

    # Upstream Configuration - App Servers
    upstream app_servers {
        least_conn;
        
        # Primary app servers
        server app1:3000 weight=3 max_fails=3 fail_timeout=30s;
        server app2:3000 weight=3 max_fails=3 fail_timeout=30s;
        server app3:3000 weight=2 max_fails=3 fail_timeout=30s;
        
        # Backup server
        server app_backup:3000 backup;
        
        # Health check
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    # Upstream Configuration - API Servers
    upstream api_servers {
        ip_hash;  # Session affinity for API calls
        
        server api1:3000 weight=2 max_fails=2 fail_timeout=20s;
        server api2:3000 weight=2 max_fails=2 fail_timeout=20s;
        
        keepalive 16;
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name heypeter-academy.com www.heypeter-academy.com;
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Let's Encrypt ACME challenge
        location /.well-known/acme-challenge/ {
            root /var/www/letsencrypt;
        }
        
        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS Server Configuration
    server {
        listen 443 ssl http2;
        server_name heypeter-academy.com www.heypeter-academy.com;

        # SSL Configuration
        include /etc/nginx/ssl/nginx-ssl.conf;

        # Connection and Rate Limiting
        limit_conn perip 20;
        limit_conn perserver 1000;
        limit_req zone=general burst=20 nodelay;

        # Root and Index
        root /var/www/html;
        index index.html;

        # Security Headers (additional to SSL config)
        add_header X-Request-ID $request_id always;
        add_header X-Response-Time $request_time always;

        # Health Check Endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # API Routes with Rate Limiting
        location /api/ {
            limit_req zone=api burst=50 nodelay;
            
            # Proxy settings
            proxy_pass http://api_servers;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # Caching for GET requests
            proxy_cache api_cache;
            proxy_cache_valid 200 1m;
            proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
            proxy_cache_bypass $http_cache_control;
            add_header X-Cache-Status $upstream_cache_status;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }

        # Authentication endpoints with stricter rate limiting
        location ~ ^/api/(auth|login) {
            limit_req zone=login burst=10 nodelay;
            
            proxy_pass http://api_servers;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # No caching for auth endpoints
            proxy_cache off;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # Static Assets with Aggressive Caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Cache-Status "STATIC";
            
            # Try local files first, then proxy to app
            try_files $uri @app;
            
            # Compress static files
            gzip_static on;
        }

        # Next.js Static Files
        location /_next/static/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Cache-Status "STATIC";
            
            proxy_pass http://app_servers;
            proxy_cache static_cache;
            proxy_cache_valid 200 1y;
        }

        # Uploads and Media Files
        location /uploads/ {
            expires 30d;
            add_header Cache-Control "public";
            add_header X-Cache-Status "MEDIA";
            
            # Security for uploaded files
            add_header X-Content-Type-Options nosniff;
            add_header X-Frame-Options DENY;
            
            try_files $uri @app;
        }

        # WebSocket Support for Real-time Features
        location /ws/ {
            proxy_pass http://app_servers;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific timeouts
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }

        # Main Application Routes
        location / {
            # Try static files, then proxy to app
            try_files $uri $uri/ @app;
        }

        # Fallback to Application
        location @app {
            proxy_pass http://app_servers;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # Caching for pages
            proxy_cache static_cache;
            proxy_cache_valid 200 5m;
            proxy_cache_bypass $http_cache_control $cookie_nocache $arg_nocache;
            add_header X-Cache-Status $upstream_cache_status;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Error Pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /var/www/html;
            internal;
        }
        
        location = /50x.html {
            root /var/www/html;
            internal;
        }

        # Maintenance Mode
        location @maintenance {
            return 503;
        }

        # Security - Block common attack patterns
        location ~* \.(htaccess|htpasswd|ini|log|sh|sql|conf)$ {
            deny all;
        }

        location ~* wp-(admin|content|config|includes) {
            deny all;
        }
    }

    # Include additional server configurations
    include /etc/nginx/conf.d/*.conf;
}